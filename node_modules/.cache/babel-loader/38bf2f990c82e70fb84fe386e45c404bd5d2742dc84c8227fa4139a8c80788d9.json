{"ast":null,"code":"import consumer from \"./consumer\";\n$(document).on('DOMContentLoaded', function () {\n  const notificationList = $('#notification-list');\n  const count = $('#notification-count');\n  const resetCountButton = $('#reset-count-button');\n  consumer.subscriptions.create('NotificationsChannel', {\n    connected() {\n      console.log(\"NotificationsChannel connected\");\n    },\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      const newNotificationItem = $('<li>').append($('<a>').attr('href', '#').text(data.message));\n      notificationList.append(newNotificationItem);\n      increaseNotificationCount();\n    }\n  });\n  resetCountButton.on('click', function () {\n    resetNotificationCount();\n  });\n  function increaseNotificationCount() {\n    const currentCount = parseInt(count.text());\n    const newCount = currentCount + 1;\n    count.text(newCount);\n    count.text(\"newCount\");\n    count.attr('data-count', newCount);\n  }\n  function resetNotificationCount() {\n    count.text('0');\n    count.attr('data-count', '0');\n  }\n});","map":{"version":3,"names":["consumer","$","document","on","notificationList","count","resetCountButton","subscriptions","create","connected","console","log","disconnected","received","data","newNotificationItem","append","attr","text","message","increaseNotificationCount","resetNotificationCount","currentCount","parseInt","newCount"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\n$(document).on('DOMContentLoaded', function () {\n  const notificationList = $('#notification-list');\n  const count = $('#notification-count');\n  const resetCountButton = $('#reset-count-button');\n\n  consumer.subscriptions.create('NotificationsChannel', {\n    connected() {\n      console.log(\"NotificationsChannel connected\");\n    },\n\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n\n    received(data) {\n      const newNotificationItem = $('<li>').append($('<a>').attr('href', '#').text(data.message));\n      notificationList.append(newNotificationItem);\n      increaseNotificationCount();\n    }\n  });\n\n  resetCountButton.on('click', function () {\n    resetNotificationCount();\n  });\n\n  function increaseNotificationCount() {\n    const currentCount = parseInt(count.text());\n    const newCount = currentCount + 1;\n    count.text(newCount);\n    count.text(\"newCount\");\n    count.attr('data-count', newCount);\n  }\n\n  function resetNotificationCount() {\n    count.text('0');\n    count.attr('data-count', '0');\n  }\n});\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjCC,CAAC,CAACC,QAAQ,CAAC,CAACC,EAAE,CAAC,kBAAkB,EAAE,YAAY;EAC7C,MAAMC,gBAAgB,GAAGH,CAAC,CAAC,oBAAoB,CAAC;EAChD,MAAMI,KAAK,GAAGJ,CAAC,CAAC,qBAAqB,CAAC;EACtC,MAAMK,gBAAgB,GAAGL,CAAC,CAAC,qBAAqB,CAAC;EAEjDD,QAAQ,CAACO,aAAa,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACpDC,SAASA,CAAA,EAAG;MACVC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb;IAAA,CACD;IAEDC,QAAQA,CAACC,IAAI,EAAE;MACb,MAAMC,mBAAmB,GAAGd,CAAC,CAAC,MAAM,CAAC,CAACe,MAAM,CAACf,CAAC,CAAC,KAAK,CAAC,CAACgB,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAACC,IAAI,CAACJ,IAAI,CAACK,OAAO,CAAC,CAAC;MAC3Ff,gBAAgB,CAACY,MAAM,CAACD,mBAAmB,CAAC;MAC5CK,yBAAyB,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC;EAEFd,gBAAgB,CAACH,EAAE,CAAC,OAAO,EAAE,YAAY;IACvCkB,sBAAsB,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,SAASD,yBAAyBA,CAAA,EAAG;IACnC,MAAME,YAAY,GAAGC,QAAQ,CAAClB,KAAK,CAACa,IAAI,CAAC,CAAC,CAAC;IAC3C,MAAMM,QAAQ,GAAGF,YAAY,GAAG,CAAC;IACjCjB,KAAK,CAACa,IAAI,CAACM,QAAQ,CAAC;IACpBnB,KAAK,CAACa,IAAI,CAAC,UAAU,CAAC;IACtBb,KAAK,CAACY,IAAI,CAAC,YAAY,EAAEO,QAAQ,CAAC;EACpC;EAEA,SAASH,sBAAsBA,CAAA,EAAG;IAChChB,KAAK,CAACa,IAAI,CAAC,GAAG,CAAC;IACfb,KAAK,CAACY,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC;EAC/B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}