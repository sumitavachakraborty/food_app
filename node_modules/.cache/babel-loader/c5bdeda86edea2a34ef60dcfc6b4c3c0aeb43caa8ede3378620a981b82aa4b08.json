{"ast":null,"code":"import consumer from \"./consumer\";\ndocument.addEventListener(\"turbolinks:load\", () => {\n  const notificationCount = document.getElementById('notification-count');\n  consumer.subscriptions.create({\n    channel: \"NotificationsChannel\"\n  }, {\n    connected() {\n      console.log(\"NotificationsChannel connecte\");\n    },\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      console.log(data);\n      // Increase the notification count\n\n      var currentCount = parseInt(notificationCount.textContent);\n      console.log(currentCount);\n      var newCount = currentCount + 1;\n      document.getElementById('notification-count').textContent = newCount;\n      var notificationList = document.getElementById('notification-list');\n      console.log(notifizzcationList);\n      // var listItem = document.createElement('a');\n      // listItem.classList.add('dropdown-item');\n      // listItem.href = '#';\n      // listItem.textContent = 'New notification';\n      // notificationList.appendChild(listItem);\n      // console.log(notificationList.innerHtml);\n    }\n  });\n});","map":{"version":3,"names":["consumer","document","addEventListener","notificationCount","getElementById","subscriptions","create","channel","connected","console","log","disconnected","received","data","currentCount","parseInt","textContent","newCount","notificationList","notifizzcationList"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\ndocument.addEventListener(\"turbolinks:load\", ()=> {\n  const notificationCount = document.getElementById('notification-count');\n  consumer.subscriptions.create({ channel: \"NotificationsChannel\" }, {\n    \n    connected() {\n      console.log(\"NotificationsChannel connecte\");\n    },\n    \n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      console.log(data);\n          // Increase the notification count\n          \n          var currentCount = parseInt(notificationCount.textContent);\n          console.log(currentCount);\n          var newCount = currentCount + 1;\n          document.getElementById('notification-count').textContent = newCount;\n          \n          \n          var notificationList = document.getElementById('notification-list');\n          console.log(notifizzcationList);\n          // var listItem = document.createElement('a');\n          // listItem.classList.add('dropdown-item');\n          // listItem.href = '#';\n          // listItem.textContent = 'New notification';\n          // notificationList.appendChild(listItem);\n          // console.log(notificationList.innerHtml);\n    }\n  });\n});\n  \n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjCC,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,EAAE,MAAK;EAChD,MAAMC,iBAAiB,GAAGF,QAAQ,CAACG,cAAc,CAAC,oBAAoB,CAAC;EACvEJ,QAAQ,CAACK,aAAa,CAACC,MAAM,CAAC;IAAEC,OAAO,EAAE;EAAuB,CAAC,EAAE;IAEjEC,SAASA,CAAA,EAAG;MACVC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb;IAAA,CACD;IACDC,QAAQA,CAACC,IAAI,EAAE;MACbJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MACb;;MAEA,IAAIC,YAAY,GAAGC,QAAQ,CAACZ,iBAAiB,CAACa,WAAW,CAAC;MAC1DP,OAAO,CAACC,GAAG,CAACI,YAAY,CAAC;MACzB,IAAIG,QAAQ,GAAGH,YAAY,GAAG,CAAC;MAC/Bb,QAAQ,CAACG,cAAc,CAAC,oBAAoB,CAAC,CAACY,WAAW,GAAGC,QAAQ;MAGpE,IAAIC,gBAAgB,GAAGjB,QAAQ,CAACG,cAAc,CAAC,mBAAmB,CAAC;MACnEK,OAAO,CAACC,GAAG,CAACS,kBAAkB,CAAC;MAC/B;MACA;MACA;MACA;MACA;MACA;IACN;EACF,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}