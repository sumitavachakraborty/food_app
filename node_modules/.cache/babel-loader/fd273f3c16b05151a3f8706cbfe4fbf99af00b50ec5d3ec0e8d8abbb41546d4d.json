{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create('NotificationsChannel', {\n  connected() {\n    console.log(\"NotificationsChannel connected\");\n  },\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n  received(data) {\n    const newNotification = document.createElement('div');\n    newNotification.classList.add('notification');\n    newNotification.textContent = data.data.message;\n    notificationContainer.appendChild(newNotification);\n  }\n});","map":{"version":3,"names":["consumer","subscriptions","create","connected","console","log","disconnected","received","data","newNotification","document","createElement","classList","add","textContent","message","notificationContainer","appendChild"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\n  consumer.subscriptions.create('NotificationsChannel', {\n    connected() {\n      console.log(\"NotificationsChannel connected\");\n    },\n\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n\n    received(data) {\n      const newNotification = document.createElement('div');\n      newNotification.classList.add('notification');\n      newNotification.textContent = data.data.message;\n\n      notificationContainer.appendChild(newNotification);\n\n    }\n  });\n\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAE/BA,QAAQ,CAACC,aAAa,CAACC,MAAM,CAAC,sBAAsB,EAAE;EACpDC,SAASA,CAAA,EAAG;IACVC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAC/C,CAAC;EAEDC,YAAYA,CAAA,EAAG;IACb;EAAA,CACD;EAEDC,QAAQA,CAACC,IAAI,EAAE;IACb,MAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACrDF,eAAe,CAACG,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7CJ,eAAe,CAACK,WAAW,GAAGN,IAAI,CAACA,IAAI,CAACO,OAAO;IAE/CC,qBAAqB,CAACC,WAAW,CAACR,eAAe,CAAC;EAEpD;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}