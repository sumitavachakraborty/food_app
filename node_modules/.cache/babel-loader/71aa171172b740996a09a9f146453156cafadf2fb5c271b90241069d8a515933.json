{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create({\n  channel: \"NotificationsChannel\"\n}, {\n  connected() {\n    console.log(\"NotificationsChannel connecte\");\n  },\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n  received(data) {\n    console.log(data);\n    // Increase the notification count\n    var notificationCount = document.getElementById('notification-count');\n    var currentCount = parseInt(document.getElementById('notification-count').textContent);\n    console.log(currentCount);\n    var newCount = currentCount + 1;\n    notificationCount.textContent = newCount;\n\n    // var notificationList = document.getElementById('notification-list');\n    // console.log(notificationList);\n    // var listItem = document.createElement('a');\n    // listItem.classList.add('dropdown-item');\n    // listItem.href = '#';\n    // listItem.textContent = 'New notification';\n    // notificationList.appendChild(listItem);\n    // console.log(notificationList.innerHtml);\n  }\n});","map":{"version":3,"names":["consumer","subscriptions","create","channel","connected","console","log","disconnected","received","data","notificationCount","document","getElementById","currentCount","parseInt","textContent","newCount"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\n\n  consumer.subscriptions.create({ channel: \"NotificationsChannel\" }, {\n    \n    connected() {\n      console.log(\"NotificationsChannel connecte\");\n    },\n    \n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      console.log(data);\n          // Increase the notification count\n          var notificationCount = document.getElementById('notification-count');\n          var currentCount = parseInt(document.getElementById('notification-count').textContent);\n          console.log(currentCount);\n          var newCount = currentCount + 1;\n          notificationCount.textContent = newCount;\n          \n          \n          // var notificationList = document.getElementById('notification-list');\n          // console.log(notificationList);\n          // var listItem = document.createElement('a');\n          // listItem.classList.add('dropdown-item');\n          // listItem.href = '#';\n          // listItem.textContent = 'New notification';\n          // notificationList.appendChild(listItem);\n          // console.log(notificationList.innerHtml);\n    }\n  });\n\n  \n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAG/BA,QAAQ,CAACC,aAAa,CAACC,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAuB,CAAC,EAAE;EAEjEC,SAASA,CAAA,EAAG;IACVC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C,CAAC;EAEDC,YAAYA,CAAA,EAAG;IACb;EAAA,CACD;EACDC,QAAQA,CAACC,IAAI,EAAE;IACbJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACb;IACA,IAAIC,iBAAiB,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;IACrE,IAAIC,YAAY,GAAGC,QAAQ,CAACH,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,CAACG,WAAW,CAAC;IACtFV,OAAO,CAACC,GAAG,CAACO,YAAY,CAAC;IACzB,IAAIG,QAAQ,GAAGH,YAAY,GAAG,CAAC;IAC/BH,iBAAiB,CAACK,WAAW,GAAGC,QAAQ;;IAGxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACN;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}