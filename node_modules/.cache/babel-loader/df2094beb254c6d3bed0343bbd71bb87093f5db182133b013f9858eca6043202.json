{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create({\n  channel: \"NotificationsChannel\"\n}, {\n  connected() {\n    console.log(\"NotificationsChannel connecte\");\n  },\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n  received(data) {\n    const notificationCount = document.getElementById('notification-count');\n    const currentCount = parseInt(notificationCount.innerText);\n    notificationCount.innerText = currentCount + 1;\n    console.log(data);\n  }\n});","map":{"version":3,"names":["consumer","subscriptions","create","channel","connected","console","log","disconnected","received","data","notificationCount","document","getElementById","currentCount","parseInt","innerText"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\n\n  consumer.subscriptions.create({ channel: \"NotificationsChannel\"}, {\n    connected() {\n      console.log(\"NotificationsChannel connecte\");\n    },\n    \n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      const notificationCount = document.getElementById('notification-count');\n      const currentCount = parseInt(notificationCount.innerText);    \n      notificationCount.innerText = currentCount + 1;\n      console.log(data);\n    }\n  });\n\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAG/BA,QAAQ,CAACC,aAAa,CAACC,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAsB,CAAC,EAAE;EAChEC,SAASA,CAAA,EAAG;IACVC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C,CAAC;EAEDC,YAAYA,CAAA,EAAG;IACb;EAAA,CACD;EACDC,QAAQA,CAACC,IAAI,EAAE;IACb,MAAMC,iBAAiB,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;IACvE,MAAMC,YAAY,GAAGC,QAAQ,CAACJ,iBAAiB,CAACK,SAAS,CAAC;IAC1DL,iBAAiB,CAACK,SAAS,GAAGF,YAAY,GAAG,CAAC;IAC9CR,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}