{"ast":null,"code":"import consumer from \"./consumer\";\nconst notificationCount = $('#notification-count');\nconsumer.subscriptions.create({\n  channel: \"NotificationsChannel\"\n}, {\n  connected() {\n    console.log(\"NotificationsChannel connecte\");\n  },\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n  received(data) {\n    console.log(data);\n    // Increase the notification count\n    var currentCount = parseInt(notificationCount.textContent);\n    notificationCount.textContent = currentCount + 1;\n\n    // var notificationList = document.getElementById('notification-list');\n    // console.log(notificationList);\n    // var listItem = document.createElement('a');\n    // listItem.classList.add('dropdown-item');\n    // listItem.href = '#';\n    // listItem.textContent = 'New notification';\n    // notificationList.appendChild(listItem);\n    // console.log(notificationList.innerHtml);\n  }\n});","map":{"version":3,"names":["consumer","notificationCount","$","subscriptions","create","channel","connected","console","log","disconnected","received","data","currentCount","parseInt","textContent"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\n  const notificationCount = $('#notification-count');\n  consumer.subscriptions.create({ channel: \"NotificationsChannel\"}, {\n    connected() {\n      console.log(\"NotificationsChannel connecte\");\n    },\n    \n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      console.log(data);\n          // Increase the notification count\n          var currentCount = parseInt(notificationCount.textContent);\n          notificationCount.textContent = currentCount + 1;\n          \n          // var notificationList = document.getElementById('notification-list');\n          // console.log(notificationList);\n          // var listItem = document.createElement('a');\n          // listItem.classList.add('dropdown-item');\n          // listItem.href = '#';\n          // listItem.textContent = 'New notification';\n          // notificationList.appendChild(listItem);\n          // console.log(notificationList.innerHtml);\n    }\n  });\n\n  \n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAE/B,MAAMC,iBAAiB,GAAGC,CAAC,CAAC,qBAAqB,CAAC;AAClDF,QAAQ,CAACG,aAAa,CAACC,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAsB,CAAC,EAAE;EAChEC,SAASA,CAAA,EAAG;IACVC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C,CAAC;EAEDC,YAAYA,CAAA,EAAG;IACb;EAAA,CACD;EACDC,QAAQA,CAACC,IAAI,EAAE;IACbJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACb;IACA,IAAIC,YAAY,GAAGC,QAAQ,CAACZ,iBAAiB,CAACa,WAAW,CAAC;IAC1Db,iBAAiB,CAACa,WAAW,GAAGF,YAAY,GAAG,CAAC;;IAEhD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACN;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}