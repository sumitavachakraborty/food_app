{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create({\n  channel: \"NotificationsChannel\"\n}, {\n  connected() {\n    console.log(\"NotificationsChannel connecte\");\n  },\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n  received(data) {\n    console.log(data);\n    // Increase the notification count\n    var notificationCount = $('#notification-count');\n    var currentCount = parseInt(notificationCount.text());\n    notificationCount.text(currentCount + 1);\n\n    // Append a new dropdown item\n    var notificationList = document.getElementById('notification-list');\n    console.log(notificationList.innerHTML);\n    // Create a new list item\n    var listItem = document.createElement('li');\n    listItem.innerHTML = 'message';\n    notificationList.appendChild(listItem);\n    console.log(notificationList.innerHTML);\n  }\n});","map":{"version":3,"names":["consumer","subscriptions","create","channel","connected","console","log","disconnected","received","data","notificationCount","$","currentCount","parseInt","text","notificationList","document","getElementById","innerHTML","listItem","createElement","appendChild"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\n\n  consumer.subscriptions.create({ channel: \"NotificationsChannel\"}, {\n    connected() {\n      console.log(\"NotificationsChannel connecte\");\n    },\n    \n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      console.log(data);\n          // Increase the notification count\n          var notificationCount = $('#notification-count');\n          var currentCount = parseInt(notificationCount.text());\n          notificationCount.text(currentCount + 1);\n          \n          // Append a new dropdown item\n          var notificationList = document.getElementById('notification-list');\n          console.log(notificationList.innerHTML);\n        // Create a new list item\n        var listItem = document.createElement('li');\n        listItem.innerHTML = 'message';\n        notificationList.appendChild(listItem);\n        console.log(notificationList.innerHTML);\n    }\n  });\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAG/BA,QAAQ,CAACC,aAAa,CAACC,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAsB,CAAC,EAAE;EAChEC,SAASA,CAAA,EAAG;IACVC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C,CAAC;EAEDC,YAAYA,CAAA,EAAG;IACb;EAAA,CACD;EACDC,QAAQA,CAACC,IAAI,EAAE;IACbJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACb;IACA,IAAIC,iBAAiB,GAAGC,CAAC,CAAC,qBAAqB,CAAC;IAChD,IAAIC,YAAY,GAAGC,QAAQ,CAACH,iBAAiB,CAACI,IAAI,CAAC,CAAC,CAAC;IACrDJ,iBAAiB,CAACI,IAAI,CAACF,YAAY,GAAG,CAAC,CAAC;;IAExC;IACA,IAAIG,gBAAgB,GAAGC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;IACnEZ,OAAO,CAACC,GAAG,CAACS,gBAAgB,CAACG,SAAS,CAAC;IACzC;IACA,IAAIC,QAAQ,GAAGH,QAAQ,CAACI,aAAa,CAAC,IAAI,CAAC;IAC3CD,QAAQ,CAACD,SAAS,GAAG,SAAS;IAC9BH,gBAAgB,CAACM,WAAW,CAACF,QAAQ,CAAC;IACtCd,OAAO,CAACC,GAAG,CAACS,gBAAgB,CAACG,SAAS,CAAC;EAC3C;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}