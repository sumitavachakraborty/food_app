{"ast":null,"code":"import consumer from \"./consumer\";\n$(document).on('DOMContentLoaded', function () {\n  const notificationList = $('#notification-list');\n  const notificationCountElement = $('#notification-count');\n  const resetCountButton = $('#reset-count-button');\n  consumer.subscriptions.create('NotificationsChannel', {\n    connected() {\n      console.log(\"NotificationsChannel connected\");\n    },\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received(data) {\n      console.log(data);\n      const notificationList = $('#notification-list');\n      const notificationCountElement = $('#notification-count');\n      const currentCount = parseInt(notificationCountElement.text());\n      const newCount = currentCount + 1;\n      notificationCountElement.text(newCount);\n      console.log(newCount);\n      notificationCountElement.attr('data-count', newCount);\n      const newNotificationItem = $('<li>').append($('<a>').attr('href', '#').text(data.data['message']));\n      notificationList.append(newNotificationItem);\n    }\n  });\n});","map":{"version":3,"names":["consumer","$","document","on","notificationList","notificationCountElement","resetCountButton","subscriptions","create","connected","console","log","disconnected","received","data","currentCount","parseInt","text","newCount","attr","newNotificationItem","append"],"sources":["/home/sumitava/rails_practise/zom/zoma/app/javascript/channels/notifications_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\n$(document).on('DOMContentLoaded', function () {\n  const notificationList = $('#notification-list');\n  const notificationCountElement = $('#notification-count');\n  const resetCountButton = $('#reset-count-button');\n\n  consumer.subscriptions.create('NotificationsChannel', {\n    connected() {\n      console.log(\"NotificationsChannel connected\");\n    },\n\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n\n    received(data) {\n      console.log(data);\n\n      const notificationList = $('#notification-list');\n      const notificationCountElement = $('#notification-count');\n        const currentCount = parseInt(notificationCountElement.text());\n      const newCount = currentCount + 1;\n      notificationCountElement.text(newCount);\n      console.log(newCount);\n      notificationCountElement.attr('data-count', newCount);\n      const newNotificationItem = $('<li>').append($('<a>').attr('href', '#').text(data.data['message']));\n      notificationList.append(newNotificationItem);\n\n    }\n  });\n\n\n});\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjCC,CAAC,CAACC,QAAQ,CAAC,CAACC,EAAE,CAAC,kBAAkB,EAAE,YAAY;EAC7C,MAAMC,gBAAgB,GAAGH,CAAC,CAAC,oBAAoB,CAAC;EAChD,MAAMI,wBAAwB,GAAGJ,CAAC,CAAC,qBAAqB,CAAC;EACzD,MAAMK,gBAAgB,GAAGL,CAAC,CAAC,qBAAqB,CAAC;EAEjDD,QAAQ,CAACO,aAAa,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACpDC,SAASA,CAAA,EAAG;MACVC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb;IAAA,CACD;IAEDC,QAAQA,CAACC,IAAI,EAAE;MACbJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MAEjB,MAAMV,gBAAgB,GAAGH,CAAC,CAAC,oBAAoB,CAAC;MAChD,MAAMI,wBAAwB,GAAGJ,CAAC,CAAC,qBAAqB,CAAC;MACvD,MAAMc,YAAY,GAAGC,QAAQ,CAACX,wBAAwB,CAACY,IAAI,CAAC,CAAC,CAAC;MAChE,MAAMC,QAAQ,GAAGH,YAAY,GAAG,CAAC;MACjCV,wBAAwB,CAACY,IAAI,CAACC,QAAQ,CAAC;MACvCR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;MACrBb,wBAAwB,CAACc,IAAI,CAAC,YAAY,EAAED,QAAQ,CAAC;MACrD,MAAME,mBAAmB,GAAGnB,CAAC,CAAC,MAAM,CAAC,CAACoB,MAAM,CAACpB,CAAC,CAAC,KAAK,CAAC,CAACkB,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAACF,IAAI,CAACH,IAAI,CAACA,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;MACnGV,gBAAgB,CAACiB,MAAM,CAACD,mBAAmB,CAAC;IAE9C;EACF,CAAC,CAAC;AAGJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}